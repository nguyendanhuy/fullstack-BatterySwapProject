spring.application.name=batteryswap

# PostgreSQL datasource (Railway)
spring.datasource.url=jdbc:postgresql://trolley.proxy.rlwy.net:55645/railway?serverTimezone=Asia/Ho_Chi_Minh
spring.datasource.username=postgres
spring.datasource.password=ZiwFtSrFbipHNvaALjMSzXlUTGIqDukh
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/currentDB.sql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jackson.time-zone=Asia/Ho_Chi_Minh

# Server port
server.port=${PORT:8080}


# Swagger OpenAPI path
springdoc.swagger-ui.path=/
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.displayRequestDuration=true
springdoc.swagger-ui.filter=true

# Fix generated server URL ?? Swagger kh?ng t? pick http
springdoc.api-docs.groups.enabled=true
springdoc.override-with-generic-response=true

#  EMAIL (SendGrid)
sendgrid.api.key=${SENDGRID_API_KEY}
spring.mail.from=${SPRING_MAIL_FROM}


#  JWT CONFIG
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# JWT RESEND TOKEN (email verify)
jwt.resend.secret=${JWT_RESEND_SECRET}
jwt.resend.expiration=${JWT_RESEND_EXPIRATION}

# ? FRONTEND URL
app.frontend.verify-url=${APP_FRONTEND_VERIFY_URL}






